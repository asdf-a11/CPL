CREATE_FUNCTION cplMain, void, void
	OPENSCOPE 
	CREATE_STRUCT _vec2, i32~_x~i32~_y
	CREATE_FUNCTION _printVec2, void, _vec2~_a
		OPENSCOPE 
		CREATE_ARGUMENT _vec2, _a
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_0
		. _#EXP_FUNCTION_ARGUMENT_0, _a, _x
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_1
		CALL _#EXP_FUNCTION_RETURN_1, _printn, _#EXP_FUNCTION_ARGUMENT_0
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_2
		MOV _#EXP_FUNCTION_ARGUMENT_2, 95
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_3
		CALL _#EXP_FUNCTION_RETURN_3, _printc, _#EXP_FUNCTION_ARGUMENT_2
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_4
		. _#EXP_FUNCTION_ARGUMENT_4, _a, _y
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_5
		CALL _#EXP_FUNCTION_RETURN_5, _printn, _#EXP_FUNCTION_ARGUMENT_4
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_6
		MOV _#EXP_FUNCTION_ARGUMENT_6, 10
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_7
		CALL _#EXP_FUNCTION_RETURN_7, _printc, _#EXP_FUNCTION_ARGUMENT_6
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_8
		MOV _#EXP_FUNCTION_ARGUMENT_8, 13
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_9
		CALL _#EXP_FUNCTION_RETURN_9, _printc, _#EXP_FUNCTION_ARGUMENT_8
		CLOSESCOPE 
	END_FUNCTION 
	CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_10
	CALL _#EXP_FUNCTION_RETURN_10, _graphicsinit
	REPEAT rep_0
		OPENSCOPE 
		CREATE UNKNOWN, EXP_VAR_0
		MOV EXP_VAR_0, 1
		! EXP_VAR_0, EXP_VAR_0
		IF EXP_VAR_0
			OPENSCOPE 
			BREAK rep_0
			CLOSESCOPE 
		ENDIF 
		CREATE i32, _counter1
		CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_0
		CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_1
		MOV EXP_TEMP_VAR_0, _counter1
		& EXP_TEMP_VAR_1, EXP_TEMP_VAR_0
		CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_2
		MOV EXP_TEMP_VAR_2, 0
		DREF_MOV EXP_TEMP_VAR_1, EXP_TEMP_VAR_2
		REPEAT rep_1
			OPENSCOPE 
			CREATE UNKNOWN, EXP_VAR_1
			< EXP_VAR_1, _counter1, 10
			! EXP_VAR_1, EXP_VAR_1
			IF EXP_VAR_1
				OPENSCOPE 
				BREAK rep_1
				CLOSESCOPE 
			ENDIF 
			CREATE i32, _counter2
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_3
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_4
			MOV EXP_TEMP_VAR_3, _counter2
			& EXP_TEMP_VAR_4, EXP_TEMP_VAR_3
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_5
			MOV EXP_TEMP_VAR_5, 0
			DREF_MOV EXP_TEMP_VAR_4, EXP_TEMP_VAR_5
			REPEAT rep_2
				OPENSCOPE 
				CREATE UNKNOWN, EXP_VAR_2
				< EXP_VAR_2, _counter2, 10
				! EXP_VAR_2, EXP_VAR_2
				IF EXP_VAR_2
					OPENSCOPE 
					BREAK rep_2
					CLOSESCOPE 
				ENDIF 
				CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_11
				MOV _#EXP_FUNCTION_ARGUMENT_11, _counter1
				CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_12
				MOV _#EXP_FUNCTION_ARGUMENT_12, _counter2
				CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_13
				MOV _#EXP_FUNCTION_ARGUMENT_13, 255
				CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_14
				MOV _#EXP_FUNCTION_ARGUMENT_14, 0
				CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_15
				MOV _#EXP_FUNCTION_ARGUMENT_15, 0
				CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_16
				CALL _#EXP_FUNCTION_RETURN_16, _drawpixel, _#EXP_FUNCTION_ARGUMENT_11, _#EXP_FUNCTION_ARGUMENT_12, _#EXP_FUNCTION_ARGUMENT_13, _#EXP_FUNCTION_ARGUMENT_14, _#EXP_FUNCTION_ARGUMENT_15
				CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_6
				CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_7
				MOV EXP_TEMP_VAR_6, _counter2
				& EXP_TEMP_VAR_7, EXP_TEMP_VAR_6
				CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_8
				+ EXP_TEMP_VAR_8, _counter2, 1
				DREF_MOV EXP_TEMP_VAR_7, EXP_TEMP_VAR_8
				CLOSESCOPE 
			ENDREPEAT 
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_9
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_10
			MOV EXP_TEMP_VAR_9, _counter1
			& EXP_TEMP_VAR_10, EXP_TEMP_VAR_9
			CREATE_TEMP_VAR UNKNOWN, EXP_TEMP_VAR_11
			+ EXP_TEMP_VAR_11, _counter1, 1
			DREF_MOV EXP_TEMP_VAR_10, EXP_TEMP_VAR_11
			CLOSESCOPE 
		ENDREPEAT 
		CREATE UNKNOWN, _#EXP_FUNCTION_ARGUMENT_17
		MOV _#EXP_FUNCTION_ARGUMENT_17, 10
		CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_18
		CALL _#EXP_FUNCTION_RETURN_18, _graphicssleep, _#EXP_FUNCTION_ARGUMENT_17
		CLOSESCOPE 
	ENDREPEAT 
	REPEAT rep_3
		OPENSCOPE 
		CREATE UNKNOWN, EXP_VAR_3
		MOV EXP_VAR_3, 1
		! EXP_VAR_3, EXP_VAR_3
		IF EXP_VAR_3
			OPENSCOPE 
			BREAK rep_3
			CLOSESCOPE 
		ENDIF 
		CLOSESCOPE 
	ENDREPEAT 
	CLOSESCOPE 
END_FUNCTION 
