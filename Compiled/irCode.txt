CREATE_FUNCTION _cplMain, void, void
	OPENSCOPE 
	CREATE i32, _counter
	CREATE i32, EXP_TEMP_VAR_0
	MOV EXP_TEMP_VAR_0, 1
	MOV _counter, EXP_TEMP_VAR_0
	CREATE i32, _sign
	CREATE i32, EXP_TEMP_VAR_1
	- EXP_TEMP_VAR_1, 1
	MOV _sign, EXP_TEMP_VAR_1
	CREATE f32, _pi
	CREATE i32, EXP_TEMP_VAR_2
	MOV EXP_TEMP_VAR_2, 4
	MOV _pi, EXP_TEMP_VAR_2
	REPEAT rep_0
		OPENSCOPE 
		CREATE UNKNOWN, EXP_VAR_0
		< EXP_VAR_0, _counter, 100
		! EXP_VAR_0, EXP_VAR_0
		IF EXP_VAR_0
			OPENSCOPE 
			BREAK rep_0
			CLOSESCOPE 
		ENDIF 
		CREATE f32, EXP_TEMP_VAR_3
		CREATE f32, EXP_VAR_1
		CREATE f32, EXP_VAR_2
		CREATE i32, EXP_VAR_3
		CREATE i32, EXP_VAR_4
		* EXP_VAR_4, _counter, 2
		+ EXP_VAR_3, 1, EXP_VAR_4
		/ EXP_VAR_2, 4.0, EXP_VAR_3
		* EXP_VAR_1, EXP_VAR_2, _sign
		+ EXP_TEMP_VAR_3, _pi, EXP_VAR_1
		MOV _pi, EXP_TEMP_VAR_3
		CREATE i32, EXP_TEMP_VAR_4
		CREATE i32, EXP_VAR_5
		- EXP_VAR_5, 1
		* EXP_TEMP_VAR_4, _sign, EXP_VAR_5
		MOV _sign, EXP_TEMP_VAR_4
		CREATE i32, EXP_TEMP_VAR_5
		+ EXP_TEMP_VAR_5, _counter, 1
		MOV _counter, EXP_TEMP_VAR_5
		CLOSESCOPE 
	ENDREPEAT 
	CREATE f32, _#EXP_FUNCTION_ARGUMENT_0
	MOV _#EXP_FUNCTION_ARGUMENT_0, _pi
	CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_1
	CALL _#EXP_FUNCTION_RETURN_1, _printf, _#EXP_FUNCTION_ARGUMENT_0
	CREATE i32, _#EXP_FUNCTION_ARGUMENT_2
	MOV _#EXP_FUNCTION_ARGUMENT_2, 10
	CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_3
	CALL _#EXP_FUNCTION_RETURN_3, _printc, _#EXP_FUNCTION_ARGUMENT_2
	CREATE i32, _#EXP_FUNCTION_ARGUMENT_4
	MOV _#EXP_FUNCTION_ARGUMENT_4, 13
	CREATE UNKNOWN, _#EXP_FUNCTION_RETURN_5
	CALL _#EXP_FUNCTION_RETURN_5, _printc, _#EXP_FUNCTION_ARGUMENT_4
	CLOSESCOPE 
END_FUNCTION 
