i32 SCREEN_X = 600;
i32 SCREEN_Y = 600;
i32 PLAYER_SIZE_X = 20;
i32 PLAYER_SIZE_Y = 20;

graphicsinit(SCREEN_X, SCREEN_Y);

i32 playerPosX = SCREEN_X / 2;
i32 playerPosY = SCREEN_Y - PLAYER_SIZE_Y - 5;

ui8$ screenBuffer = shalloc(SCREEN_X * SCREEN_Y * 3);

fn void drawScreenBuffer(){
	i32 x = 0;
	i32 counter = 0;
	while x < SCREEN_X{
		i32 y = 0;
		while y < SCREEN_Y{
			drawpixel(x,y,
				$(screenBuffer + counter),
				$(screenBuffer + counter + 1),
				$(screenBuffer + counter + 2),
			);
			counter = counter + 3;
			y = y + 1;
		}
		x = x + 1;
	}
}
fn void drawPlayer(){
	i32 x = 0;
	while x < PLAYER_SIZE_X{
		i32 y = 0;
		while y < PLAYER_SIZE_Y{
			i32 screenPos = ((playerPosX + x) * SCREEN_X + (playerPosY + y)) * 3;
			$(screenBuffer + screenPos) = 255;
			$(screenBuffer + screenPos + 1) = 0;
			$(screenBuffer + screenPos + 2) = 30;
			y = y + 1;
		}
		x = x + 1;
	}
}

while 1{
	drawPlayer();
	drawScreenBuffer();
	graphicssleep(1000);
}


while 1{}


##
fn void println(){
	printc(10);
	printc(13);
}
fn void printn(i32 number){	
	i32 bufferSize = 11;
	i32[bufferSize] buffer = 0;
	i32 pointer = 10;
	i32 runOnceFlag = 1;
	while number != 0 or runOnceFlag == 1{
		i32 digit = number % 10;
		number = number / 10;
		printc(digit + 48);
		println();
		buffer[pointer] = digit + 48;		
		pointer = pointer - 1;
		runOnceFlag = 0;
	}
	pointer = pointer + 1;
	while pointer < bufferSize{
		printc(buffer[pointer]);
		pointer = pointer + 1;
	}
}
printn(356);
println();
i32[8] buffer = 49;
i32 counter = 0;
while counter < 8{
	printc(buffer[counter]);
	counter = counter + 1;
}
##





##
fn printb(i32 number){
	printc(48);
	printc(98);
	i32 counter = 0;
	while counter < 4*8{
		i32 bit = number && 1;
		number = number >> 1;
		counter = counter + 1;
		bit = bit + 48;
		printc(bit);
	}
}
fn main(){
	i32[8] b = [49,50,51,52,53,54,55,0];
	i32 counter = 0;
	while b[counter] != 0{
		printc(b[counter]);
		counter = counter + 1;
	}
    while 1==1{}
}
##

