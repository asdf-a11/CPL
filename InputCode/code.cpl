##
struct Test{
	int a;
	int b;
}

Test g;
g.a = 10;
g.b = 15;
printn(g.a);
printn(g.b);
##
printc(48);


##
fn void println(){
	printc(10);
	printc(13);
}
fn void printn(i32 number){	
	i32 bufferSize = 11;
	i32[bufferSize] buffer = 0;
	i32 pointer = 10;
	i32 runOnceFlag = 1;
	while number != 0 or runOnceFlag == 1{
		i32 digit = number % 10;
		number = number / 10;
		printc(digit + 48);
		println();
		buffer[pointer] = digit + 48;		
		pointer = pointer - 1;
		runOnceFlag = 0;
	}
	pointer = pointer + 1;
	while pointer < bufferSize{
		printc(buffer[pointer]);
		pointer = pointer + 1;
	}
}
printn(356);
println();
i32[8] buffer = 49;
i32 counter = 0;
while counter < 8{
	printc(buffer[counter]);
	counter = counter + 1;
}
##





##
fn printb(i32 number){
	printc(48);
	printc(98);
	i32 counter = 0;
	while counter < 4*8{
		i32 bit = number && 1;
		number = number >> 1;
		counter = counter + 1;
		bit = bit + 48;
		printc(bit);
	}
}
fn main(){
	i32[8] b = [49,50,51,52,53,54,55,0];
	i32 counter = 0;
	while b[counter] != 0{
		printc(b[counter]);
		counter = counter + 1;
	}
    while 1==1{}
}
##

