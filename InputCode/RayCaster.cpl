i32 MAP_SX = 5;
i32 MAP_SY = 5;
ui8[MAP_SY][MAP_SX] map = [
	[1,1,1,1,1],
	[1,0,0,0,1],
	[1,0,0,0,1],
	[1,0,0,0,1],
	[1,1,1,1,1]
];

i32 SCREEN_X = 600;
i32 SCREEN_Y = 600;

ui8$ screenBuffer = shalloc(SCREEN_X * SCREEN_Y * 3);

f32 playerX = 2.0;
f32 playerY = 2.0;
f32 playerRot = 0.5;




fn void drawScreenBuffer(){
	i32 x = 0;
	i32 counter = 0;
	while x < SCREEN_X{
		i32 y = 0;
		while y < SCREEN_Y{
			drawpixel(x,y,
				$(screenBuffer + counter),
				$(screenBuffer + counter + 1),
				$(screenBuffer + counter + 2),
			);
			counter = counter + 3;
			y = y + 1;
		}
		x = x + 1;
	}
}
fn void drawRect(i32 xPos, i32 yPos, i32 sx, i32 sy){
	i32 x = 0;
	while x < sx{
		i32 y = 0;
		while y < sy{
			i32 screenPos = ((xPos + x) * SCREEN_X + (yPos + y)) * 3;
			if screenPos < SCREEN_X * SCREEN_Y * 3 - 3 or screenPos < 0{
				$(screenBuffer + screenPos) = 255;
				$(screenBuffer + screenPos + 1) = 0;
				$(screenBuffer + screenPos + 2) = 30;
			}
			y = y + 1;
		}
		x = x + 1;
	}
}
fn void drawLine(i32 xPos, i32 ySize){
	i32 y = 0;
	if xPos < 0 or xPos > SCREEN_X{

	}
	else{
		i32 y = SCREEN_Y / 2 - ySize / 2;
		while y < SCREEN_Y / 2 + ySize / 2{
			if y < 0 or y > SCREEN_Y - 1{

			}
			else{
				i32 screenPos = ((xPos * SCREEN_X) + y) * 3;
				$(screenBuffer + screenPos + 1) = 255;
				$(screenBuffer + screenPos + 2) = 255;
				$(screenBuffer + screenPos + 3) = 255;
			}
			y = y + 1;
		}
	}
}
fn void clearScreen(){
	i32 counter = 0;
	while counter < SCREEN_X * SCREEN_Y * 3{
		$(screenBuffer + counter) = 0;
		counter = counter + 1;
	}
}
fn void println(){
	printc(10);
	printc(13);
}
fn f32 getDepth(f32 fovCounter){
	f32 STEP_SIZE = 0.1;
	f32 value = arctan(fovCounter);
	f32 theta = playerRot;
	f32 x = cos(theta) * value + sin(theta);
	f32 y = -sin(theta) * value + cos(theta);
	i32 MAX_STEPS = 7.0 / STEP_SIZE;
	i32 stepCounter = 0;
	f32 rayXPos = playerX;
	f32 rayYPos = playerY;
	while stepCounter < MAX_STEPS{
		rayXPos = rayXPos + x * STEP_SIZE;
		rayYPos = rayYPos + y * STEP_SIZE;
		i32 a = rayXPos;
		i32 b = rayYPos;
		ui8 v = map[a][b];
		if v == 1{
			return STEP_SIZE * stepCounter;
		}
		stepCounter = stepCounter + 1;
	}
	return -1.0;
}


graphicsinit(SCREEN_X, SCREEN_Y);

while 1{
	graphicspump();
	
	f32 FOV = 2.09;
	f32 fovCounter = -FOV / 2.0;
	f32 fovStepSize = FOV / SCREEN_X;
	##f32 yScaler = tan(FOV / 2.0);##
	i32 xCounter = 0;
	while fovCounter < FOV / 2.0{
		f32 depth = getDepth(fovCounter);
		drawLine(xCounter,0.5 / depth * SCREEN_Y);
		xCounter = xCounter + 1;
		fovCounter = fovCounter + fovStepSize;
	}
	playerRot = playerRot + 0.1;

	drawScreenBuffer();
	graphicssleep(500);
	clearScreen();
	printn(9); println();
}
